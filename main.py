import asyncio

from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext

from credentials import TOKEN
from log import logger

from trainer import trainer_router
from admin import admin_router
from client import client_router


bot = Bot(token=TOKEN)
dp = Dispatcher()



# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    await state.clear()
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.first_name} (ID: {message.from_user.id}) –ø–æ—á–∞–≤ –≤–∑–∞—î–º–æ–¥—ñ—é –∑ –±–æ—Ç–æ–º")
    record_to_coach = types.ReplyKeyboardMarkup(
        keyboard=[[types.KeyboardButton(text="–ó–∞–ø–∏—Å –¥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ ‚è∫Ô∏è")],
                  [types.KeyboardButton(text="–Ø —Ç—Ä–µ–Ω–µ—Ä üí™")],],
        resize_keyboard=True,
        one_time_keyboard=True,
        # input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥–∞—á–∏"
    )
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –¥—ñ—é:", reply_markup=record_to_coach)


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    print('Bot run')
    dp.include_router(trainer_router)
    dp.include_router(admin_router)
    dp.include_router(client_router)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())